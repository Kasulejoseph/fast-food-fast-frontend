// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test PostForm PostForm snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostForm
    onChange={[MockFunction]}
    onSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <t
        tag="div"
      >
        <t
          lg={null}
          md="6"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <form
            onSubmit={[MockFunction]}
          >
            <p
              className="h4 text-center mb-4"
              color="elegant-color-dark"
            >
              Add menu
            </p>
            <label
              className="grey-text"
              htmlFor="defaultFormContactNameEx"
            >
              Meal
            </label>
            <input
              className="form-control"
              id="defaultFormContactNameEx"
              name="meal"
              onChange={[MockFunction]}
              type="text"
            />
            <br />
            <label
              className="grey-text"
              htmlFor="defaultFormContactEmailEx"
            >
              price
            </label>
            <input
              className="form-control"
              id="defaultFormContactEmailEx"
              name="price"
              onChange={[MockFunction]}
              type="number"
            />
            <br />
            <label
              className="grey-text"
              htmlFor="defaultFormContactMessageEx"
            >
              Description
            </label>
            <textarea
              className="form-control"
              id="defaultFormContactMessageEx"
              name="description"
              onChange={[MockFunction]}
              rows="3"
              type="text"
            />
            <div
              className="text-start mt-4"
            >
              <t
                color="warning"
                outline={true}
                tag="button"
                type="submit"
              >
                Send
                <t
                  border={false}
                  brand={false}
                  className="ml-2"
                  fab={false}
                  fal={false}
                  far={false}
                  fixed={false}
                  flip=""
                  icon="paper-plane-o"
                  inverse=""
                  light={false}
                  list={false}
                  pull=""
                  pulse={false}
                  regular={false}
                  rotate=""
                  size=""
                  spin={false}
                  stack=""
                />
              </t>
            </div>
          </form>
        </t>
      </t>,
      "className": "mt-5 pt-5",
      "fluid": false,
      "tag": "div",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          lg={null}
          md="6"
          sm={null}
          tag="div"
          xl={null}
          xs={null}
        >
          <form
            onSubmit={[MockFunction]}
          >
            <p
              className="h4 text-center mb-4"
              color="elegant-color-dark"
            >
              Add menu
            </p>
            <label
              className="grey-text"
              htmlFor="defaultFormContactNameEx"
            >
              Meal
            </label>
            <input
              className="form-control"
              id="defaultFormContactNameEx"
              name="meal"
              onChange={[MockFunction]}
              type="text"
            />
            <br />
            <label
              className="grey-text"
              htmlFor="defaultFormContactEmailEx"
            >
              price
            </label>
            <input
              className="form-control"
              id="defaultFormContactEmailEx"
              name="price"
              onChange={[MockFunction]}
              type="number"
            />
            <br />
            <label
              className="grey-text"
              htmlFor="defaultFormContactMessageEx"
            >
              Description
            </label>
            <textarea
              className="form-control"
              id="defaultFormContactMessageEx"
              name="description"
              onChange={[MockFunction]}
              rows="3"
              type="text"
            />
            <div
              className="text-start mt-4"
            >
              <t
                color="warning"
                outline={true}
                tag="button"
                type="submit"
              >
                Send
                <t
                  border={false}
                  brand={false}
                  className="ml-2"
                  fab={false}
                  fal={false}
                  far={false}
                  fixed={false}
                  flip=""
                  icon="paper-plane-o"
                  inverse=""
                  light={false}
                  list={false}
                  pull=""
                  pulse={false}
                  regular={false}
                  rotate=""
                  size=""
                  spin={false}
                  stack=""
                />
              </t>
            </div>
          </form>
        </t>,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <form
            onSubmit={[MockFunction]}
          >
            <p
              className="h4 text-center mb-4"
              color="elegant-color-dark"
            >
              Add menu
            </p>
            <label
              className="grey-text"
              htmlFor="defaultFormContactNameEx"
            >
              Meal
            </label>
            <input
              className="form-control"
              id="defaultFormContactNameEx"
              name="meal"
              onChange={[MockFunction]}
              type="text"
            />
            <br />
            <label
              className="grey-text"
              htmlFor="defaultFormContactEmailEx"
            >
              price
            </label>
            <input
              className="form-control"
              id="defaultFormContactEmailEx"
              name="price"
              onChange={[MockFunction]}
              type="number"
            />
            <br />
            <label
              className="grey-text"
              htmlFor="defaultFormContactMessageEx"
            >
              Description
            </label>
            <textarea
              className="form-control"
              id="defaultFormContactMessageEx"
              name="description"
              onChange={[MockFunction]}
              rows="3"
              type="text"
            />
            <div
              className="text-start mt-4"
            >
              <t
                color="warning"
                outline={true}
                tag="button"
                type="submit"
              >
                Send
                <t
                  border={false}
                  brand={false}
                  className="ml-2"
                  fab={false}
                  fal={false}
                  far={false}
                  fixed={false}
                  flip=""
                  icon="paper-plane-o"
                  inverse=""
                  light={false}
                  list={false}
                  pull=""
                  pulse={false}
                  regular={false}
                  rotate=""
                  size=""
                  spin={false}
                  stack=""
                />
              </t>
            </div>
          </form>,
          "lg": null,
          "md": "6",
          "sm": null,
          "tag": "div",
          "xl": null,
          "xs": null,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="h4 text-center mb-4"
                color="elegant-color-dark"
              >
                Add menu
              </p>,
              <label
                className="grey-text"
                htmlFor="defaultFormContactNameEx"
              >
                Meal
              </label>,
              <input
                className="form-control"
                id="defaultFormContactNameEx"
                name="meal"
                onChange={[MockFunction]}
                type="text"
              />,
              <br />,
              <label
                className="grey-text"
                htmlFor="defaultFormContactEmailEx"
              >
                price
              </label>,
              <input
                className="form-control"
                id="defaultFormContactEmailEx"
                name="price"
                onChange={[MockFunction]}
                type="number"
              />,
              <br />,
              <label
                className="grey-text"
                htmlFor="defaultFormContactMessageEx"
              >
                Description
              </label>,
              <textarea
                className="form-control"
                id="defaultFormContactMessageEx"
                name="description"
                onChange={[MockFunction]}
                rows="3"
                type="text"
              />,
              <div
                className="text-start mt-4"
              >
                <t
                  color="warning"
                  outline={true}
                  tag="button"
                  type="submit"
                >
                  Send
                  <t
                    border={false}
                    brand={false}
                    className="ml-2"
                    fab={false}
                    fal={false}
                    far={false}
                    fixed={false}
                    flip=""
                    icon="paper-plane-o"
                    inverse=""
                    light={false}
                    list={false}
                    pull=""
                    pulse={false}
                    regular={false}
                    rotate=""
                    size=""
                    spin={false}
                    stack=""
                  />
                </t>
              </div>,
            ],
            "onSubmit": [MockFunction],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add menu",
                "className": "h4 text-center mb-4",
                "color": "elegant-color-dark",
              },
              "ref": null,
              "rendered": "Add menu",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Meal",
                "className": "grey-text",
                "htmlFor": "defaultFormContactNameEx",
              },
              "ref": null,
              "rendered": "Meal",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "defaultFormContactNameEx",
                "name": "meal",
                "onChange": [MockFunction],
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "price",
                "className": "grey-text",
                "htmlFor": "defaultFormContactEmailEx",
              },
              "ref": null,
              "rendered": "price",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "defaultFormContactEmailEx",
                "name": "price",
                "onChange": [MockFunction],
                "type": "number",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Description",
                "className": "grey-text",
                "htmlFor": "defaultFormContactMessageEx",
              },
              "ref": null,
              "rendered": "Description",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "defaultFormContactMessageEx",
                "name": "description",
                "onChange": [MockFunction],
                "rows": "3",
                "type": "text",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <t
                  color="warning"
                  outline={true}
                  tag="button"
                  type="submit"
                >
                  Send
                  <t
                    border={false}
                    brand={false}
                    className="ml-2"
                    fab={false}
                    fal={false}
                    far={false}
                    fixed={false}
                    flip=""
                    icon="paper-plane-o"
                    inverse=""
                    light={false}
                    list={false}
                    pull=""
                    pulse={false}
                    regular={false}
                    rotate=""
                    size=""
                    spin={false}
                    stack=""
                  />
                </t>,
                "className": "text-start mt-4",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    "Send",
                    <t
                      border={false}
                      brand={false}
                      className="ml-2"
                      fab={false}
                      fal={false}
                      far={false}
                      fixed={false}
                      flip=""
                      icon="paper-plane-o"
                      inverse=""
                      light={false}
                      list={false}
                      pull=""
                      pulse={false}
                      regular={false}
                      rotate=""
                      size=""
                      spin={false}
                      stack=""
                    />,
                  ],
                  "color": "warning",
                  "outline": true,
                  "tag": "button",
                  "type": "submit",
                },
                "ref": null,
                "rendered": Array [
                  "Send",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "border": false,
                      "brand": false,
                      "className": "ml-2",
                      "fab": false,
                      "fal": false,
                      "far": false,
                      "fixed": false,
                      "flip": "",
                      "icon": "paper-plane-o",
                      "inverse": "",
                      "light": false,
                      "list": false,
                      "pull": "",
                      "pulse": false,
                      "regular": false,
                      "rotate": "",
                      "size": "",
                      "spin": false,
                      "stack": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "form",
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <t
          tag="div"
        >
          <t
            lg={null}
            md="6"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <form
              onSubmit={[MockFunction]}
            >
              <p
                className="h4 text-center mb-4"
                color="elegant-color-dark"
              >
                Add menu
              </p>
              <label
                className="grey-text"
                htmlFor="defaultFormContactNameEx"
              >
                Meal
              </label>
              <input
                className="form-control"
                id="defaultFormContactNameEx"
                name="meal"
                onChange={[MockFunction]}
                type="text"
              />
              <br />
              <label
                className="grey-text"
                htmlFor="defaultFormContactEmailEx"
              >
                price
              </label>
              <input
                className="form-control"
                id="defaultFormContactEmailEx"
                name="price"
                onChange={[MockFunction]}
                type="number"
              />
              <br />
              <label
                className="grey-text"
                htmlFor="defaultFormContactMessageEx"
              >
                Description
              </label>
              <textarea
                className="form-control"
                id="defaultFormContactMessageEx"
                name="description"
                onChange={[MockFunction]}
                rows="3"
                type="text"
              />
              <div
                className="text-start mt-4"
              >
                <t
                  color="warning"
                  outline={true}
                  tag="button"
                  type="submit"
                >
                  Send
                  <t
                    border={false}
                    brand={false}
                    className="ml-2"
                    fab={false}
                    fal={false}
                    far={false}
                    fixed={false}
                    flip=""
                    icon="paper-plane-o"
                    inverse=""
                    light={false}
                    list={false}
                    pull=""
                    pulse={false}
                    regular={false}
                    rotate=""
                    size=""
                    spin={false}
                    stack=""
                  />
                </t>
              </div>
            </form>
          </t>
        </t>,
        "className": "mt-5 pt-5",
        "fluid": false,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <t
            lg={null}
            md="6"
            sm={null}
            tag="div"
            xl={null}
            xs={null}
          >
            <form
              onSubmit={[MockFunction]}
            >
              <p
                className="h4 text-center mb-4"
                color="elegant-color-dark"
              >
                Add menu
              </p>
              <label
                className="grey-text"
                htmlFor="defaultFormContactNameEx"
              >
                Meal
              </label>
              <input
                className="form-control"
                id="defaultFormContactNameEx"
                name="meal"
                onChange={[MockFunction]}
                type="text"
              />
              <br />
              <label
                className="grey-text"
                htmlFor="defaultFormContactEmailEx"
              >
                price
              </label>
              <input
                className="form-control"
                id="defaultFormContactEmailEx"
                name="price"
                onChange={[MockFunction]}
                type="number"
              />
              <br />
              <label
                className="grey-text"
                htmlFor="defaultFormContactMessageEx"
              >
                Description
              </label>
              <textarea
                className="form-control"
                id="defaultFormContactMessageEx"
                name="description"
                onChange={[MockFunction]}
                rows="3"
                type="text"
              />
              <div
                className="text-start mt-4"
              >
                <t
                  color="warning"
                  outline={true}
                  tag="button"
                  type="submit"
                >
                  Send
                  <t
                    border={false}
                    brand={false}
                    className="ml-2"
                    fab={false}
                    fal={false}
                    far={false}
                    fixed={false}
                    flip=""
                    icon="paper-plane-o"
                    inverse=""
                    light={false}
                    list={false}
                    pull=""
                    pulse={false}
                    regular={false}
                    rotate=""
                    size=""
                    spin={false}
                    stack=""
                  />
                </t>
              </div>
            </form>
          </t>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <form
              onSubmit={[MockFunction]}
            >
              <p
                className="h4 text-center mb-4"
                color="elegant-color-dark"
              >
                Add menu
              </p>
              <label
                className="grey-text"
                htmlFor="defaultFormContactNameEx"
              >
                Meal
              </label>
              <input
                className="form-control"
                id="defaultFormContactNameEx"
                name="meal"
                onChange={[MockFunction]}
                type="text"
              />
              <br />
              <label
                className="grey-text"
                htmlFor="defaultFormContactEmailEx"
              >
                price
              </label>
              <input
                className="form-control"
                id="defaultFormContactEmailEx"
                name="price"
                onChange={[MockFunction]}
                type="number"
              />
              <br />
              <label
                className="grey-text"
                htmlFor="defaultFormContactMessageEx"
              >
                Description
              </label>
              <textarea
                className="form-control"
                id="defaultFormContactMessageEx"
                name="description"
                onChange={[MockFunction]}
                rows="3"
                type="text"
              />
              <div
                className="text-start mt-4"
              >
                <t
                  color="warning"
                  outline={true}
                  tag="button"
                  type="submit"
                >
                  Send
                  <t
                    border={false}
                    brand={false}
                    className="ml-2"
                    fab={false}
                    fal={false}
                    far={false}
                    fixed={false}
                    flip=""
                    icon="paper-plane-o"
                    inverse=""
                    light={false}
                    list={false}
                    pull=""
                    pulse={false}
                    regular={false}
                    rotate=""
                    size=""
                    spin={false}
                    stack=""
                  />
                </t>
              </div>
            </form>,
            "lg": null,
            "md": "6",
            "sm": null,
            "tag": "div",
            "xl": null,
            "xs": null,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="h4 text-center mb-4"
                  color="elegant-color-dark"
                >
                  Add menu
                </p>,
                <label
                  className="grey-text"
                  htmlFor="defaultFormContactNameEx"
                >
                  Meal
                </label>,
                <input
                  className="form-control"
                  id="defaultFormContactNameEx"
                  name="meal"
                  onChange={[MockFunction]}
                  type="text"
                />,
                <br />,
                <label
                  className="grey-text"
                  htmlFor="defaultFormContactEmailEx"
                >
                  price
                </label>,
                <input
                  className="form-control"
                  id="defaultFormContactEmailEx"
                  name="price"
                  onChange={[MockFunction]}
                  type="number"
                />,
                <br />,
                <label
                  className="grey-text"
                  htmlFor="defaultFormContactMessageEx"
                >
                  Description
                </label>,
                <textarea
                  className="form-control"
                  id="defaultFormContactMessageEx"
                  name="description"
                  onChange={[MockFunction]}
                  rows="3"
                  type="text"
                />,
                <div
                  className="text-start mt-4"
                >
                  <t
                    color="warning"
                    outline={true}
                    tag="button"
                    type="submit"
                  >
                    Send
                    <t
                      border={false}
                      brand={false}
                      className="ml-2"
                      fab={false}
                      fal={false}
                      far={false}
                      fixed={false}
                      flip=""
                      icon="paper-plane-o"
                      inverse=""
                      light={false}
                      list={false}
                      pull=""
                      pulse={false}
                      regular={false}
                      rotate=""
                      size=""
                      spin={false}
                      stack=""
                    />
                  </t>
                </div>,
              ],
              "onSubmit": [MockFunction],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add menu",
                  "className": "h4 text-center mb-4",
                  "color": "elegant-color-dark",
                },
                "ref": null,
                "rendered": "Add menu",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Meal",
                  "className": "grey-text",
                  "htmlFor": "defaultFormContactNameEx",
                },
                "ref": null,
                "rendered": "Meal",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "id": "defaultFormContactNameEx",
                  "name": "meal",
                  "onChange": [MockFunction],
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "price",
                  "className": "grey-text",
                  "htmlFor": "defaultFormContactEmailEx",
                },
                "ref": null,
                "rendered": "price",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "id": "defaultFormContactEmailEx",
                  "name": "price",
                  "onChange": [MockFunction],
                  "type": "number",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Description",
                  "className": "grey-text",
                  "htmlFor": "defaultFormContactMessageEx",
                },
                "ref": null,
                "rendered": "Description",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "id": "defaultFormContactMessageEx",
                  "name": "description",
                  "onChange": [MockFunction],
                  "rows": "3",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "textarea",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <t
                    color="warning"
                    outline={true}
                    tag="button"
                    type="submit"
                  >
                    Send
                    <t
                      border={false}
                      brand={false}
                      className="ml-2"
                      fab={false}
                      fal={false}
                      far={false}
                      fixed={false}
                      flip=""
                      icon="paper-plane-o"
                      inverse=""
                      light={false}
                      list={false}
                      pull=""
                      pulse={false}
                      regular={false}
                      rotate=""
                      size=""
                      spin={false}
                      stack=""
                    />
                  </t>,
                  "className": "text-start mt-4",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      "Send",
                      <t
                        border={false}
                        brand={false}
                        className="ml-2"
                        fab={false}
                        fal={false}
                        far={false}
                        fixed={false}
                        flip=""
                        icon="paper-plane-o"
                        inverse=""
                        light={false}
                        list={false}
                        pull=""
                        pulse={false}
                        regular={false}
                        rotate=""
                        size=""
                        spin={false}
                        stack=""
                      />,
                    ],
                    "color": "warning",
                    "outline": true,
                    "tag": "button",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Send",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "border": false,
                        "brand": false,
                        "className": "ml-2",
                        "fab": false,
                        "fal": false,
                        "far": false,
                        "fixed": false,
                        "flip": "",
                        "icon": "paper-plane-o",
                        "inverse": "",
                        "light": false,
                        "list": false,
                        "pull": "",
                        "pulse": false,
                        "regular": false,
                        "rotate": "",
                        "size": "",
                        "spin": false,
                        "stack": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": "form",
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
